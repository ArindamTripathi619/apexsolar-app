name: 🧪 Local Testing Suite

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  NODE_VERSION: '18'

jobs:
  # Run comprehensive local tests
  local-tests:
    name: Comprehensive Local Tests
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: apexsolar_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Setup test database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apexsolar_test
      run: |
        npx prisma migrate deploy
        npx prisma db seed
    
    - name: Start application in background
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/apexsolar_test
        NEXTAUTH_SECRET: test-secret-key-for-testing-only
        NEXTAUTH_URL: http://localhost:3000
        NODE_ENV: test
      run: |
        npm run build
        npm start &
        
        # Wait for app to be ready
        for i in {1..30}; do
          if curl -f -s http://localhost:3000/api/health >/dev/null 2>&1; then
            echo "✅ App is ready on attempt $i"
            break
          fi
          echo "⏳ Waiting for app to start... attempt $i"
          sleep 2
        done
    
    - name: Run test suites
      env:
        TEST_BASE_URL: http://localhost:3000
      run: |
        chmod +x ./tests/*.sh
        
        echo "🧪 Running minimal test suite..."
        ./tests/minimal-test-suite.sh
        
        echo "🔐 Running authentication tests..."
        ./tests/test-auth-fixes.sh
        
        echo "🛡️ Running security tests..."
        ./tests/security-test-suite.sh
        
        echo "⚡ Running performance tests..."
        ./tests/performance-test-suite.sh
    
    - name: Cleanup
      if: always()
      run: |
        # Kill any remaining processes
        pkill -f "npm start" || true
        pkill -f "node" || true
